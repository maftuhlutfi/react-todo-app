{"version":3,"sources":["components/Header.jsx","components/AddList.jsx","components/List.jsx","components/ListSelect.jsx","components/Content.jsx","App.js","index.js"],"names":["HeaderLogo","Header","as","icon","textAlign","Icon","name","circular","Content","AddList","addList","useState","toggle","setToggle","input","setInput","className","Input","style","width","marginRight","placeholder","onChange","e","value","target","Button","onClick","List","isComplete","deleteList","toggleIsCompleteList","Checkbox","label","checked","textDecoration","float","lineHeight","link","size","listOptions","key","text","selected","ListSelect","setListType","Dropdown","inline","options","defaultValue","innerText","initList","lists","setLists","listType","prev","filter","list","newLists","index","map","indexOf","showList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a2b217f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\nconst HeaderLogo = () => (\r\n  <div>\r\n    <Header as='h2' icon textAlign='center'>\r\n      <Icon name='calendar check outline' circular />\r\n      <Header.Content>Todo List</Header.Content>\r\n    </Header>\r\n  </div>\r\n)\r\n\r\nexport default HeaderLogo","import React, {useState} from 'react'\r\nimport { Button, Icon, Input } from 'semantic-ui-react';\r\n\r\nconst AddList = ({addList}) => {\r\n\tconst [toggle, setToggle] = useState(false);\r\n\tconst [input, setInput] = useState(\"\");\r\n\r\n\tconst handleChange = e => {\r\n\t\tconst {value} = e.target;\r\n\r\n\t\tsetInput(value);\r\n\t\tvalue !== \"\" ? setToggle(true) : setToggle(false);\r\n\t}\r\n\r\n\tconst handleClick = () => {\r\n\t\taddList(input);\r\n\t\tsetInput(\"\");\r\n\t\tsetToggle(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"add-list\">\r\n\t\t\t<Input \r\n\t\t\t\tstyle={toggle ? {width: \"80%\", marginRight: \"2%\"} : {width: \"100%\"}} \r\n\t\t\t\tclassName=\"input-list\" \r\n\t\t\t\tplaceholder=\"Add a new list\"\r\n\t\t\t\tonChange={handleChange} \r\n\t\t\t\tvalue={input}\r\n\t\t\t/>\r\n\t\t\t{toggle &&\r\n\t\t\t\t<Button onClick={handleClick} icon>\r\n\t\t\t\t\t<Icon name='add' />\r\n\t\t\t\t</Button>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AddList","import React from 'react';\r\nimport { Checkbox, Icon } from 'semantic-ui-react';\r\n\r\nexport default function List({name, isComplete, deleteList, toggleIsCompleteList}) {\r\n\tconst handleChange = e => {\r\n\t\ttoggleIsCompleteList(name);\r\n\t}\r\n\r\n\tconst handleClick = () => {\r\n\t\tdeleteList(name);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"list-item\">\r\n\t\t\t<Checkbox \r\n\t\t\t\tlabel={name}\r\n\t\t\t\tchecked={isComplete ? true : false}\r\n\t\t\t\tstyle={isComplete ? {width: '90%', textDecoration: 'line-through'} : {width: '90%'}}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t/>\r\n\t\t\t<Icon \r\n\t\t\t\tstyle={{float: 'right', lineHeight: \"2\"}} \r\n\t\t\t\tlink \r\n\t\t\t\tname='close' \r\n\t\t\t\tsize='small' \r\n\t\t\t\tonClick={handleClick}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport { Dropdown } from 'semantic-ui-react'\r\n\r\nconst listOptions = [\r\n  { key: 'all', value: 'all', text: 'all' },\r\n  { key: 'completed', value: 'completed', text: 'completed' },\r\n  { key: 'incomplete', value: 'incomplete', text: 'incomplete', selected: true },\r\n]\r\n\r\nconst ListSelect = ({setListType}) => {\r\n  const handleChange = e => {\r\n    setListType(e.target.innerText);\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-select\">\r\n      Show me&nbsp;{' '} \r\n      <Dropdown\r\n        inline\r\n        options={listOptions}\r\n        defaultValue={listOptions[2].value}\r\n        onChange={handleChange}\r\n      />\r\n      &nbsp;lists\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListSelect","import React, {useState}  from 'react';\r\nimport AddList from './AddList';\r\nimport List from './List';\r\nimport ListSelect from './ListSelect';\r\n\r\nconst initList = [\r\n  {\r\n    name: 'Add new list by enter the name',\r\n    isComplete: false\r\n  },\r\n  {\r\n    name: '<-- Check this if complete',\r\n    isComplete: false\r\n  },\r\n  {\r\n    name: 'Click this to delete -->',\r\n    isComplete: false\r\n  },\r\n  {\r\n    name: 'Select options below to filter lists',\r\n    isComplete: false\r\n  },\r\n]\r\n\r\nconst Content = () => {\r\n  const [lists, setLists] = useState(initList);\r\n  const [listType, setListType] = useState('incomplete');\r\n\r\n  const addList = name => {\r\n    setLists(prev => [...prev, {name: name, isComplete: false}]);\r\n  }\r\n\r\n  const deleteList = name => {\r\n    setLists(prev => prev.filter(list => list.name !== name));\r\n  }\r\n\r\n  const toggleIsCompleteList = name => {\r\n    const newLists = [...lists];\r\n    const index = lists.map(list => list.name).indexOf(name);\r\n\r\n    newLists[index].isComplete = !newLists[index].isComplete;\r\n    setLists(newLists);\r\n  }\r\n\r\n  const showList = () => {\r\n    switch (listType) {\r\n            case 'all':\r\n              return lists.map((list, index) => \r\n                    <List \r\n                      key={index}\r\n                      name={list.name} \r\n                      isComplete={list.isComplete}\r\n                      deleteList={deleteList} \r\n                      toggleIsCompleteList={toggleIsCompleteList} \r\n                    />\r\n                    );\r\n            case 'completed':\r\n              return lists.map((list, index) => \r\n                    list.isComplete && <List\r\n                      key={index} \r\n                      name={list.name} \r\n                      isComplete={list.isComplete}\r\n                      deleteList={deleteList} \r\n                      toggleIsCompleteList={toggleIsCompleteList} \r\n                    />\r\n                    );\r\n            case 'incomplete':\r\n              return lists.map((list, index) => \r\n                    !list.isComplete && <List\r\n                      key={index} \r\n                      name={list.name} \r\n                      isComplete={list.isComplete}\r\n                      deleteList={deleteList} \r\n                      toggleIsCompleteList={toggleIsCompleteList} \r\n                    />\r\n                    );\r\n            default: return null;\r\n          }\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-container\">\r\n      <AddList addList={addList} />\r\n      <div className=\"list-item-container\">\r\n        {showList()}\r\n      </div>\r\n      <ListSelect setListType={setListType} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Content","import React from 'react';\nimport Header from './components/Header';\nimport Content from './components/Content';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}