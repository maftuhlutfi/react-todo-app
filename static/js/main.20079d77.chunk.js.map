{"version":3,"sources":["components/Header.jsx","context/listsReducer.js","context/listContext.js","context/initLists.js","context/listsAction.js","components/AddList.jsx","components/List.jsx","components/ListSelect.jsx","components/Content.jsx","App.js","index.js"],"names":["HeaderLogo","Header","as","icon","textAlign","Icon","name","circular","Content","listsReducer","state","action","type","lists","payload","filter","list","map","isComplete","listType","initState","ListContext","createContext","ListsProvider","children","useReducer","dispatch","Provider","value","addList","data","removeList","updateList","setListType","AddList","useState","toggle","setToggle","input","setInput","useContext","className","Input","style","width","marginRight","placeholder","onChange","e","target","Button","onClick","List","Checkbox","label","checked","textDecoration","float","lineHeight","link","size","listOptions","key","text","selected","ListSelect","Dropdown","inline","options","defaultValue","innerText","index","showList","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20079d77.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\nconst HeaderLogo = () => (\r\n  <div>\r\n    <Header as='h2' icon textAlign='center'>\r\n      <Icon name='calendar check outline' circular />\r\n      <Header.Content>Todo List</Header.Content>\r\n    </Header>\r\n  </div>\r\n)\r\n\r\nexport default HeaderLogo","const listsReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"ADD_LIST\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlists: [...state.lists, action.payload]\r\n\t\t\t};\r\n\t\tcase \"REMOVE_LIST\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlists: state.lists.filter(list => list.name !== action.payload)\r\n\t\t\t};\r\n\t\tcase \"UPDATE_LIST\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlists: state.lists.map(list => \r\n\t\t\t\t\tlist.name === action.payload ? {...list, isComplete: !list.isComplete} : list)\r\n\t\t\t};\r\n\t\tcase \"SET_LIST_TYPE\": \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlistType: action.payload\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default listsReducer;","import React, {createContext, useReducer} from 'react';\r\nimport {initLists} from './initLists';\r\n\r\nimport listsReducer from './listsReducer';\r\nimport { addList, removeList, updateList, setListType } from './listsAction';\r\n\r\nconst initState = {\r\n\tlists: initLists,\r\n\tlistType: 'incomplete'\r\n}\r\n\r\nconst ListContext = createContext(initState);\r\n\r\nconst ListsProvider = ({ children }) => {\r\n\tconst [state, dispatch] = useReducer(listsReducer, initState);\r\n\r\n\treturn (\r\n\t\t<ListContext.Provider value={{\r\n\t\t\tlists: state.lists,\r\n\t\t\tlistType: state.listType,\r\n\t\t\taddList: data => dispatch(addList(data)),\r\n\t\t\tremoveList: data => dispatch(removeList(data)),\r\n\t\t\tupdateList: data => dispatch(updateList(data)),\r\n\t\t\tsetListType: data => dispatch(setListType(data))\r\n\t\t}}>\r\n\t\t\t{children}\r\n\t\t</ListContext.Provider>\r\n\t)\r\n};\r\n\r\nexport { ListContext, ListsProvider };","export const initLists = [\r\n  {\r\n    name: 'Add new list by enter the name',\r\n    isComplete: false\r\n  },\r\n  {\r\n    name: '<-- Check this if complete',\r\n    isComplete: false\r\n  },\r\n  {\r\n    name: 'Click this to delete -->',\r\n    isComplete: false\r\n  },\r\n  {\r\n    name: 'Select options below to filter lists',\r\n    isComplete: false\r\n  },\r\n]\r\n","export const addList = name => ({\r\n\ttype: 'ADD_LIST',\r\n\tpayload: {name, isComplete: false}\r\n});\r\n\r\nexport const removeList = name => ({\r\n\ttype: 'REMOVE_LIST',\r\n\tpayload: name\r\n})\r\n\r\nexport const updateList = name => ({\r\n\ttype: 'UPDATE_LIST',\r\n\tpayload: name\r\n})\r\n\r\nexport const setListType = type => ({\r\n\ttype: 'SET_LIST_TYPE',\r\n\tpayload: type\r\n})","import React, {useState, useContext} from 'react'\r\nimport { Button, Icon, Input } from 'semantic-ui-react';\r\n\r\nimport { ListContext } from '../context/listContext';\r\n\r\nconst AddList = () => {\r\n\tconst [toggle, setToggle] = useState(false);\r\n\tconst [input, setInput] = useState(\"\");\r\n\r\n\tconst { addList } = useContext(ListContext);\r\n\r\n\tconst handleChange = e => {\r\n\t\tconst {value} = e.target;\r\n\r\n\t\tsetInput(value);\r\n\t\tvalue !== \"\" ? setToggle(true) : setToggle(false);\r\n\t}\r\n\r\n\tconst handleClick = () => {\r\n\t\taddList(input);\r\n\t\tsetInput(\"\");\r\n\t\tsetToggle(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"add-list\">\r\n\t\t\t<Input \r\n\t\t\t\tstyle={toggle ? {width: \"80%\", marginRight: \"2%\"} : {width: \"100%\"}} \r\n\t\t\t\tclassName=\"input-list\" \r\n\t\t\t\tplaceholder=\"Add a new list\"\r\n\t\t\t\tonChange={handleChange} \r\n\t\t\t\tvalue={input}\r\n\t\t\t/>\r\n\t\t\t{toggle &&\r\n\t\t\t\t<Button onClick={handleClick} icon>\r\n\t\t\t\t\t<Icon name='add' />\r\n\t\t\t\t</Button>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AddList;","import React, {useContext} from 'react';\r\nimport { Checkbox, Icon } from 'semantic-ui-react';\r\n\r\nimport { ListContext } from '../context/listContext';\r\n\r\nexport default function List({name, isComplete}) {\r\n\tconst { removeList, updateList } = useContext(ListContext)\r\n\r\n\tconst handleChange = e => {\r\n\t\tupdateList(name);\r\n\t}\r\n\r\n\tconst handleClick = () => {\r\n\t\tremoveList(name);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"list-item\">\r\n\t\t\t<Checkbox \r\n\t\t\t\tlabel={name}\r\n\t\t\t\tchecked={isComplete ? true : false}\r\n\t\t\t\tstyle={isComplete ? {width: '90%', textDecoration: 'line-through'} : {width: '90%'}}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t/>\r\n\t\t\t<Icon \r\n\t\t\t\tstyle={{float: 'right', lineHeight: \"2\"}} \r\n\t\t\t\tlink \r\n\t\t\t\tname='close' \r\n\t\t\t\tsize='small' \r\n\t\t\t\tonClick={handleClick}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useContext} from 'react';\r\nimport { Dropdown } from 'semantic-ui-react';\r\n\r\nimport { ListContext } from '../context/listContext';\r\n\r\nconst listOptions = [\r\n  { key: 'all', value: 'all', text: 'all' },\r\n  { key: 'completed', value: 'completed', text: 'completed' },\r\n  { key: 'incomplete', value: 'incomplete', text: 'incomplete', selected: true },\r\n]\r\n\r\nconst ListSelect = () => {\r\n  const { setListType } = useContext(ListContext);\r\n\r\n  const handleChange = e => {\r\n    setListType(e.target.innerText);\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-select\">\r\n      Show me&nbsp;{' '} \r\n      <Dropdown\r\n        inline\r\n        options={listOptions}\r\n        defaultValue={listOptions[2].value}\r\n        onChange={handleChange}\r\n      />\r\n      &nbsp;lists\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListSelect;","import React, {useContext}  from 'react';\r\nimport AddList from './AddList';\r\nimport List from './List';\r\nimport ListSelect from './ListSelect';\r\n\r\nimport { ListContext } from '../context/listContext';\r\n\r\nconst Content = () => {\r\n  const { lists, listType } = useContext(ListContext);\r\n\r\n  const showList = () => {\r\n    switch (listType) {\r\n            case 'all':\r\n              return lists.map((list, index) => \r\n                    <List \r\n                      key={index}\r\n                      name={list.name} \r\n                      isComplete={list.isComplete}\r\n                    />\r\n                    );\r\n            case 'completed':\r\n              return lists.map((list, index) => \r\n                    list.isComplete && <List\r\n                      key={index} \r\n                      name={list.name} \r\n                      isComplete={list.isComplete}\r\n                    />\r\n                    );\r\n            case 'incomplete':\r\n              return lists.map((list, index) => \r\n                    !list.isComplete && <List\r\n                      key={index} \r\n                      name={list.name} \r\n                      isComplete={list.isComplete}\r\n                    />\r\n                    );\r\n            default: return null;\r\n          }\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-container\">\r\n      <AddList />\r\n      <div className=\"list-item-container\">\r\n        {showList()}\r\n      </div>\r\n      <ListSelect />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Content","import React from 'react';\nimport Header from './components/Header';\nimport Content from './components/Content';\n\nimport { ListsProvider } from './context/listContext';\n\nimport './style.css';\n\nfunction App() {\n\n\treturn (\n\t\t<ListsProvider>\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<Content />\n\t\t\t</div>\n\t\t</ListsProvider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}